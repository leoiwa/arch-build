name: BUILD

on:
  push:
  schedule:
    - cron:  '30 14 * * *'
  workflow_dispatch:
    inputs:
      pkgname:
        description: 'Package name to build'
        required: true
        type: string

jobs:
  buildAllAUR:
    if: ${{github.event_name == 'schedule' || github.event_name == 'push' }}
    strategy:
      matrix:
        repos: [fsearch-git, imhex, imhex-patterns-git, intellij-idea-ce, kafka, logseq-desktop-bin, lombok-spring-tool-suite, ns3, portainer-bin, pycharm-community-jre, qtscrcpy, redis-desktop-manager, spdlog-git, spring-tool-suite, sqlitestudio, zookeeper, gephgui-wry-git]

      fail-fast: false
      
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - uses: ./build-aur-action
      with:
        repo-name: ${{ matrix.repos }}
  
    - uses: actions/upload-artifact@v2
      with:
        path: ./*/*.pkg.tar.zst
        name: ${{ matrix.repos }}
        
    - uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        tag: "packages"
        artifacts: "./*/*.zst"
        token: ${{ secrets.GITHUB_TOKEN }}

  buildSingleAUR:
    if: ${{github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - uses: ./build-aur-action
      with:
        repo-name: ${{ github.event.inputs.pkgname }}
  
    - uses: actions/upload-artifact@v2
      with:
        path: ./*/*.pkg.tar.zst
        name: ${{ github.event.inputs.pkgname }}
        
    - uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        tag: "packages"
        artifacts: "./*/*.zst"
        token: ${{ secrets.GITHUB_TOKEN }}
        
  buildNonAUR:
    strategy:
      matrix:
        PKGBUILDs: [breeze10]

      fail-fast: false
      
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build Non-AUR packages
        id: makepkg
        uses: ./build-nonaur-action
        with:
          pkgdir: ${{ matrix.PKGBUILDs }}
          aurDeps: true
          
      - uses: actions/upload-artifact@v2
        with:
          path: ./*/*.pkg.tar.zst
          name: ${{ matrix.PKGBUILDs }}
      
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          tag: "packages"
          artifacts: ${{ steps.makepkg.outputs.pkgfile0 }}
          token: ${{ secrets.GITHUB_TOKEN }}
          
  uploadToOneDrive:      
    runs-on: ubuntu-latest
    if: always()
    needs: [buildAllAUR, buildSingleAUR, buildNonAUR]

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/download-artifact@v2
        id: download
      
      - uses: ./create-db-and-upload-action
        with:
          RCLONE_ONEDRIVE_CLIENT_ID: ${{ secrets.RCLONE_ONEDRIVE_CLIENT_ID }}
          RCLONE_ONEDRIVE_CLIENT_SECRET: ${{ secrets.RCLONE_ONEDRIVE_CLIENT_SECRET }}
          RCLONE_ONEDRIVE_REGION: global
          RCLONE_ONEDRIVE_TOKEN: ${{ secrets.RCLONE_ONEDRIVE_TOKEN }}
          RCLONE_ONEDRIVE_DRIVE_ID: ${{ secrets.RCLONE_ONEDRIVE_DRIVE_ID }}
          RCLONE_ONEDRIVE_DRIVE_TYPE: personal
          dest_path: /archrepo
          repo_name: atleo
          gpg-privatekey: ${{ secrets.gpg_private_key }}
          local_path: ${{ steps.download.outputs.download-path }}
